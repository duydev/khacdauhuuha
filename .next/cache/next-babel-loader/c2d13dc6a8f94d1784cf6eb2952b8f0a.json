{"ast":null,"code":"import { createBrowserHistory } from \"history\";\nimport { applyMiddleware, compose, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { routerMiddleware } from \"connected-react-router\";\nimport createRootReducer from \"./reducers\";\nexport var history = createBrowserHistory();\nvar initialState = {};\nexport function configureStore(preloadedState) {\n  var middlewares = [thunk, routerMiddleware(history)];\n  var store = createStore(createRootReducer(history), preloadedState, composeWithDevTools(applyMiddleware.apply(void 0, middlewares)));\n  return store;\n}\nexport default configureStore(initialState);","map":{"version":3,"sources":["/Users/duydev/Temp/khacdauhuuha/redux/store.js"],"names":["createBrowserHistory","applyMiddleware","compose","createStore","thunk","composeWithDevTools","routerMiddleware","createRootReducer","history","initialState","configureStore","preloadedState","middlewares","store"],"mappings":"AAAA,SAASA,oBAAT,QAAqC,SAArC;AACA,SAASC,eAAT,EAA0BC,OAA1B,EAAmCC,WAAnC,QAAsD,OAAtD;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,gBAAT,QAAiC,wBAAjC;AACA,OAAOC,iBAAP,MAA8B,YAA9B;AAEA,OAAO,IAAMC,OAAO,GAAGR,oBAAoB,EAApC;AAEP,IAAMS,YAAY,GAAG,EAArB;AAEA,OAAO,SAASC,cAAT,CAAwBC,cAAxB,EAAwC;AAC7C,MAAMC,WAAW,GAAG,CAACR,KAAD,EAAQE,gBAAgB,CAACE,OAAD,CAAxB,CAApB;AAEA,MAAMK,KAAK,GAAGV,WAAW,CACvBI,iBAAiB,CAACC,OAAD,CADM,EAEvBG,cAFuB,EAGvBN,mBAAmB,CAACJ,eAAe,MAAf,SAAmBW,WAAnB,CAAD,CAHI,CAAzB;AAMA,SAAOC,KAAP;AACD;AAED,eAAeH,cAAc,CAACD,YAAD,CAA7B","sourcesContent":["import { createBrowserHistory } from \"history\";\nimport { applyMiddleware, compose, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { routerMiddleware } from \"connected-react-router\";\nimport createRootReducer from \"./reducers\";\n\nexport const history = createBrowserHistory();\n\nconst initialState = {};\n\nexport function configureStore(preloadedState) {\n  const middlewares = [thunk, routerMiddleware(history)];\n\n  const store = createStore(\n    createRootReducer(history),\n    preloadedState,\n    composeWithDevTools(applyMiddleware(...middlewares))\n  );\n\n  return store;\n}\n\nexport default configureStore(initialState);\n"]},"metadata":{},"sourceType":"module"}